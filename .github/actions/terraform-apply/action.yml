name: 'Apply Terraform'
description: 'Run a terraform apply command to apply the changes.'

env:
  TF_INPUT: 0
  TF_IN_AUTOMATION: 1
  TERRAFORM_VERSION: 1.12

inputs:
  environment:
    required: true
    description: 'The environment to deploy to.'
  ref:
    required: true
    description: 'The git ref to deploy.'
  ssh-key:
    required: true
    description: 'The SSH key to use for fetching modules from github.'
  role-to-assume:
    description: 'The IAM role ARN to assume for AWS operations.'
    required: true
  region:
    required: false
    default: 'eu-west-2'
runs:
  using: 'composite'
  steps:
    - id: resolved-ref
      run: |
        REF=${{ inputs.ref }}

        if ! git rev-parse --verify "$REF" 2>/dev/null; then
          echo "::error::The ref $REF does not exist in the Git repository."
          exit 1
        else
          echo "::notice::Resolved ref: $(git rev-parse --short "$REF")"
        fi

        echo RESOLVED_REF=$(git rev-parse --short "$REF") >> "$GITHUB_OUTPUT"
      shell: bash
    - uses: actions/checkout@v4.1.0
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.role-to-assume }}
        aws-region: ${{ inputs.region }}
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
    - uses: trade-tariff/trade-tariff-tools/.github/actions/setup-ssh@main
      with:
        ssh-key: ${{ inputs.ssh-key }}
    - run: cd terraform && terraform init -backend-config=backends/${{ inputs.environment }}.tfbackend
      shell: bash
    - run: cd terraform && terraform apply -var-file=config_${{ inputs.environment }}.tfvars -auto-approve -lock-timeout=10m
      shell: bash
      env:
        TF_VAR_docker_tag: ${{ steps.resolved-ref.outputs.RESOLVED_REF }}
